0000              1   ; EECE 281 LAB 1
0000              2   ;Herman Dhak   14368138
0000              3   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              5   
0000              6   org 0000H
0000 0201D4       7            ljmp myprogram
0003              8            
000B              9   org 000BH
000B 020039      10            ljmp ISR_timer0
000E             11            
001B             12   org 001BH
001B 0200C1      13            ljmp ISR_timer1
001E             14   
002B             15   org 002BH
002B 020149      16            ljmp ISR_timer2 ;for buzzer
002E             17            
0030             18   DSEG at 30H
0030             19   count10ms: ds 1
0031             20   seconds:   ds 1
0032             21   minutes:   ds 1
0033             22   hours:     ds 1
0034             23   temphours: ds 1
0035             24   alarmseconds:  ds 1
0036             25   alarmminutes:  ds 1
0037             26   alarmhours:    ds 1
0038             27   
0000             28   BSEG
0000             29   meridian:   dbit 1
0001             30   alarmmeridian: dbit 1
0002             31   
002E             32   CSEG
002E             33   ; Look-up table for 7-segment displays
002E             34   myLUT:
002E C0F9A4B0    35       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0033 9282F880    36       DB 092H, 082H, 0F8H, 080H, 090H
     90
0038 FF          37       DB 0FFH ; All segments off
0039             38   
0039             39   XTAL           EQU 33333333
0039             40   FREQ           EQU 100
0039             41   FREQ_2              EQU 2000
0039             42   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0039             43   TIMER1_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0039             44   TIMER2_RELOAD EQU 65536-(XTAL/(12*2*FREQ_2))
0039             45   
0039             46   ISR_Timer0:
0039             47            ; Reload the timer
0039 758C93      48       mov TH0, #high(TIMER0_RELOAD)
003C 758A81      49       mov TL0, #low(TIMER0_RELOAD)
003F             50       
003F             51       ; Save used register into the stack
003F C0D0        52       push psw
0041 C0E0        53       push acc
0043 C083        54       push dph
0045 C082        55       push dpl
0047             56       
0047 20E836      57       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
004A             58   
004A             59       ; Increment the counter and check if a second has passed
004A 0530        60       inc count10ms
004C E530        61       mov a, count10ms
004E B4642F      62       cjne A, #100, ISR_Timer0_L0
0051 753000      63       mov count10ms, #0
0054             64       
0054 E531        65       mov a, seconds
0056 2401        66       add a, #1
0058 D4          67       da a
0059 F531        68       mov seconds, a
005B B46022      69       cjne A, #60H, ISR_Timer0_L0
005E 753100      70       mov seconds, #0
0061             71   
0061 E532        72       mov a, minutes
0063 2401        73       add a, #1
0065 D4          74       da a
0066 F532        75       mov minutes, a
0068 B46015      76       cjne A, #60H, ISR_Timer0_L0
006B 753200      77       mov minutes, #0
006E             78   
006E E533        79       mov a, hours
0070 2401        80       add a, #1
0072 D4          81       da a
0073 F533        82       mov hours, a
0075 B41202      83       cjne A, #12H, setmeridianinterrupt
0078 B200        84       cpl meridian
007A             85   setmeridianinterrupt:
007A B41303      86       cjne A, #13H, ISR_Timer0_L0
007D 753301      87       mov hours, #1
0080             88   
0080             89   ISR_Timer0_L0:
0080 12028D      90            lcall setAMPM
0083             91            
0083             92            ; Update the display.  This happens every 10 ms
0083 90002E      93            mov dptr, #myLUT
0086             94            
0086 E531        95            mov a, seconds
0088 540F        96            anl a, #0fH
008A 93          97            movc a, @a+dptr
008B F593        98            mov HEX2, a
008D E531        99            mov a, seconds
008F C4         100            swap a
0090 540F       101            anl a, #0fH
0092 93         102            movc a, @a+dptr
0093 F594       103            mov HEX3, a
0095            104   
0095 E532       105            mov a, minutes
0097 540F       106            anl a, #0fH
0099 93         107            movc a, @a+dptr
009A F58E       108            mov HEX4, a
009C E532       109            mov a, minutes
009E C4         110            swap a
009F 540F       111            anl a, #0fH
00A1 93         112            movc a, @a+dptr
00A2 F58F       113            mov HEX5, a
00A4            114   
00A4 E533       115            mov a, hours
00A6 540F       116            anl a, #0fH
00A8 93         117            movc a, @a+dptr
00A9 F596       118            mov HEX6, a
00AB E533       119            mov a, hours
00AD 20E402     120            jb acc.4, ISR_Timer0_L1
00B0 74A0       121            mov a, #0A0H
00B2            122   ISR_Timer0_L1:
00B2 C4         123            swap a
00B3 540F       124            anl a, #0fH
00B5 93         125            movc a, @a+dptr
00B6 F597       126            mov HEX7, a
00B8            127   
00B8            128            ; Restore used registers
00B8 D082       129            pop dpl
00BA D083       130            pop dph
00BC D0E0       131            pop acc
00BE D0D0       132            pop psw    
00C0 32         133            reti
00C1            134   
00C1            135   ;=======================================================
00C1            136   ;=========== ALARM INTERRUPT ===========================
00C1            137   ;======================================================
00C1            138   ISR_Timer1:
00C1            139            ; Reload the timer
00C1 758D93     140       mov TH1, #high(TIMER1_RELOAD)
00C4 758B81     141       mov TL1, #low(TIMER1_RELOAD)
00C7            142       ; Save used register into the stack
00C7 C0D0       143       push psw
00C9 C0E0       144       push acc
00CB C083       145       push dph
00CD C082       146       push dpl
00CF            147       
00CF 0530       148       inc count10ms
00D1 E530       149       mov a, count10ms
00D3 B46432     150       cjne A, #100, ISR_Timer1_L0
00D6 753000     151       mov count10ms, #0
00D9            152       
00D9 E531       153       mov a, seconds
00DB 2401       154       add a, #1
00DD D4         155       da a
00DE F531       156       mov seconds, a
00E0 B46025     157       cjne A, #60H, ISR_Timer1_L0
00E3 753100     158       mov seconds, #0
00E6            159   
00E6 E532       160       mov a, minutes
00E8 2401       161       add a, #1
00EA D4         162       da a
00EB F532       163       mov minutes, a
00ED B46018     164       cjne A, #60H, ISR_Timer1_L0
00F0 753200     165       mov minutes, #0
00F3            166   
00F3 E533       167       mov a, hours
00F5 2401       168       add a, #1
00F7 D4         169       da a
00F8 F533       170       mov hours, a
00FA B41202     171       cjne A, #12H, setmeridianinterrupt2
00FD B200       172       cpl meridian
00FF            173   setmeridianinterrupt2:
00FF B41306     174       cjne A, #13H, ISR_Timer1_L0
0102 753301     175       mov hours, #1
0105 20E900     176            jb SWA.1, ISR_Timer1_L0 ;Setting alarm
0108            177   
0108            178   ISR_Timer1_L0:
0108            179            ; Update the display.  This happens every 10 ms
0108 90002E     180            mov dptr, #myLUT
010B 120298     181       lcall setAMPMalarm
010E E535       182            mov a, alarmseconds
0110 540F       183            anl a, #0fH
0112 93         184            movc a, @a+dptr
0113 F593       185            mov HEX2, a
0115 E535       186            mov a, alarmseconds
0117 C4         187            swap a
0118 540F       188            anl a, #0fH
011A 93         189            movc a, @a+dptr
011B F594       190            mov HEX3, a
011D            191   
011D E536       192            mov a, alarmminutes
011F 540F       193            anl a, #0fH
0121 93         194            movc a, @a+dptr
0122 F58E       195            mov HEX4, a
0124 E536       196            mov a, alarmminutes
0126 C4         197            swap a
0127 540F       198            anl a, #0fH
0129 93         199            movc a, @a+dptr
012A F58F       200            mov HEX5, a
012C            201   
012C E537       202            mov a, alarmhours
012E 540F       203            anl a, #0fH
0130 93         204            movc a, @a+dptr
0131 F596       205            mov HEX6, a
0133 E537       206            mov a, alarmhours
0135 20E402     207            jb acc.4, ISR_Timer1_L1
0138 74A0       208            mov a, #0A0H
013A            209   ISR_Timer1_L1:
013A C4         210            swap a
013B 540F       211            anl a, #0fH
013D 93         212            movc a, @a+dptr
013E F597       213            mov HEX7, a
0140            214            ; Restore used registers
0140 D082       215            pop dpl
0142 D083       216            pop dph
0144 D0E0       217            pop acc
0146 D0D0       218            pop psw    
0148 32         219            reti
0149            220            
0149            221   ;==================== END TIMER 1 INTERRUPT =====================
0149            222   
0149            223   ISR_Timer2:
0149 C2CF       224   clr TF2
014B B280       225            cpl P0.0
014D 75CDFD     226       mov TH2, #high(TIMER2_RELOAD)
0150 75CC4A     227       mov TL2, #low(TIMER2_RELOAD)
0153 32         228       reti
0154            229   
0154            230   ;================ ALARM MODE ==============================
0154            231   A0: 
0154 30E94D     232            jnb SWA.1, alarm2clock
0157 30E9FA     233            jnb SWA.1, A0
015A            234   
015A 20FB15     235            jb KEY.3, A1
015D 30FBFD     236       jnb KEY.3, $
0160 E537       237       mov a, alarmhours
0162 2401       238            add a, #1
0164 D4         239            da a
0165 F537       240            mov alarmhours, a
0167            241       
0167 B41202     242       cjne A, #12H, setalarmmeridian
016A B201       243       cpl alarmmeridian
016C            244   setalarmmeridian:
016C B41303     245       cjne A, #13H, A1
016F 753701     246       mov alarmhours, #1
0172            247            
0172            248   A1:      
0172 20FA10     249            jb KEY.2, A2
0175 30FAFD     250       jnb KEY.2, $
0178 E536       251       mov a, alarmminutes
017A 2401       252            add a, #1
017C D4         253            da a
017D F536       254            mov alarmminutes, a
017F B46003     255       cjne A, #60H, A2
0182 753600     256       mov alarmminutes, #0
0185            257       
0185            258   A2:      
0185 20F910     259            jb KEY.1, A3
0188 30F9FD     260            jnb KEY.1, $
018B E535       261            mov a, alarmseconds
018D 2401       262            add a, #1
018F D4         263            da a
0190 F535       264            mov alarmseconds, a
0192 B46003     265       cjne A, #60H, A3
0195 753500     266       mov alarmseconds, #0
0198            267   
0198            268   A3:      
0198 020154     269            ljmp A0
019B            270   
019B            271   clock2alarm:
019B C28C       272            clr TR0 ;stop timer 0
019D D2F8       273            setb LEDG.0 ; ALARM IS ON
019F D28E       274            setb TR1 ;start timer 1
01A1 020154     275            ljmp A0
01A4            276   
01A4            277   alarm2clock:
01A4 C28E       278            clr TR1 ;stop timer 1
01A6 D28C       279            setb TR0 ;start timer 0
01A8 020206     280            ljmp M0
01AB            281            
01AB            282   ;================= SETUP ========================================
01AB            283   Init_Timers:     
01AB 758911     284            mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=1, M0=1: 16-bit timers
01AE C28C       285            clr TR0 ; Disable timer 0
01B0 C28E       286            clr TR1 ; Disable timer 1
01B2 C28D       287            clr TF0
01B4 758C93     288       mov TH0, #high(TIMER0_RELOAD)
01B7 758A81     289       mov TL0, #low(TIMER0_RELOAD)
01BA 758D93     290       mov TH1, #high(TIMER1_RELOAD)
01BD 758B81     291       mov TL1, #low(TIMER1_RELOAD)
01C0 D28C       292       setb TR0 ; Enable timer 0
01C2 D2A9       293       setb ET0 ; Enable timer 0 interrupt
01C4 D2AB       294       setb ET1 ; Enable timer 1 interrupt
01C6            295       
01C6            296       ;timer 2 code
01C6 75C800     297       mov T2CON, #00H ; Autoreload is enabled, work as a timer
01C9 C2CA       298       clr TR2
01CB C2CF       299       clr TF2
01CD            300       ; Set up timer 2 to interrupt every 10ms
01CD 75CBFD     301       mov RCAP2H,#high(TIMER2_RELOAD)
01D0 75CA4A     302       mov RCAP2L,#low(TIMER2_RELOAD)
01D3 22         303       ret
01D4            304   
01D4            305   myprogram:
01D4 75817F     306            mov SP, #7FH
01D7 759A03     307            mov P0MOD, #00000011B ; P0.0, P0.1 are outputs.  P0.1 is used for testing Timer 2!
01DA D280       308            setb P0.0
01DC C200       309            clr meridian
01DE C201       310            clr alarmmeridian
01E0 75E800     311            mov LEDRA,#0
01E3 759500     312            mov LEDRB,#0
01E6 759E00     313            mov LEDRC,#0
01E9 75F800     314            mov LEDG,#0
01EC            315            
01EC 753102     316            mov seconds, #02H
01EF 753200     317            mov minutes, #00H
01F2 753312     318            mov hours, #12H
01F5 753500     319            mov alarmseconds, #00H
01F8 753600     320            mov alarmminutes, #00H
01FB 753712     321            mov alarmhours, #12H
01FE 75918C     322            mov HEX0, #8CH
0201            323            
0201 1201AB     324            lcall Init_Timers
0204 D2AF       325       setb EA  ; Enable all interrupts
0206            326   
0206            327   M0: 
0206 20E992     328            jb SWA.1, clock2alarm
0209            329            ;mov LEDG, seconds
0209            330            ;mov LEDRA, minutes
0209            331            ;mov LEDRB, hours
0209            332            ; check for alarm
0209 30EA19     333            jnb SWA.2, increment_L0 ;only check for the alarm if enabled, disable LED if off
020C D2E9       334            setb LEDRA.1
020E E533       335            mov A, hours
0210 B53714     336            cjne A, alarmhours, increment
0213 E532       337            mov A, minutes
0215 B5360F     338            cjne A, alarmminutes, increment
0218 E531       339            mov A, seconds
021A B5350A     340            cjne A, alarmseconds, increment
021D E500       341            mov A, meridian
021F B50105     342            cjne A, alarmmeridian, increment
0222 12026B     343            lcall beep
0225            344     increment_L0:
0225 C2E9       345            clr LEDRA.1
0227            346     increment:
0227 30E8DC     347            jnb SWA.0, M0
022A            348   
022A 20FB15     349            jb KEY.3, M1
022D 30FBFD     350       jnb KEY.3, $
0230 E533       351       mov a, hours
0232 2401       352            add a, #1
0234 D4         353            da a
0235 F533       354            mov hours, a
0237            355       
0237 B41202     356       cjne A, #12H, setmeridian
023A B200       357       cpl meridian
023C            358   setmeridian:
023C B41303     359       cjne A, #13H, M1
023F 753301     360       mov hours, #1
0242            361            
0242            362   M1:      
0242 20FA10     363            jb KEY.2, M2
0245 30FAFD     364       jnb KEY.2, $
0248 E532       365       mov a, minutes
024A 2401       366            add a, #1
024C D4         367            da a
024D F532       368            mov minutes, a
024F B46003     369       cjne A, #60H, M2
0252 753200     370       mov minutes, #0
0255            371   
0255            372   M2:      
0255 20F910     373            jb KEY.1, M3
0258 30F9FD     374            jnb KEY.1, $
025B E531       375            mov a, seconds
025D 2401       376            add a, #1
025F D4         377            da a
0260 F531       378            mov seconds, a
0262 B46003     379       cjne A, #60H, M3
0265 753100     380       mov seconds, #0
0268            381   
0268            382   M3:      
0268 020206     383            ljmp M0
026B            384   ;============ BEEP CODE ===================================      
026B            385   beep:
026B D2CA       386            setb TR2
026D D2AD       387       setb ET2
026F            388       beeper:
026F B2E8       389            cpl LEDRA.0
0271 B2CA       390            cpl TR2
0273 120280     391            lcall WaitHalfSec
0276 20EB02     392            jb SWA.3, stopbeep
0279 80F4       393            sjmp beeper
027B            394   
027B            395   stopbeep:
027B C2CA       396            clr TR2
027D 020206     397            ljmp M0
0280            398            
0280            399   WaitHalfSec:
0280 7A5A       400            mov R2, #90
0282 79FA       401   L3: mov R1, #250
0284 78FA       402   L2: mov R0, #250
0286 D8FE       403   L1: djnz R0, L1
0288 D9FA       404            djnz R1, L2
028A DAF6       405            djnz R2, L3
028C 22         406            ret
028D            407   
028D            408   setAMPM:
028D 200004     409      jb meridian, setPM
0290 759108     410      mov HEX0, #08H ;A
0293 22         411      ret
0294            412   setPM:
0294 75918C     413      mov HEX0, #8CH ;P
0297 22         414      ret
0298            415     
0298            416   setAMPMalarm:
0298 200104     417      jb alarmmeridian, setPMalarm
029B 759108     418      mov HEX0, #08H ;A
029E 22         419      ret
029F            420   setPMalarm:
029F 75918C     421      mov HEX0, #8CH ;P
02A2 22         422      ret
02A3            423   END
